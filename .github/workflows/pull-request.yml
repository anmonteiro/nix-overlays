name: "Validate PR"
on:
  pull_request:
  push:
    branches:
      - master
jobs:
  tests:
    strategy:
      matrix:
        setup:
          - { ocaml-version: 4_11, continue-on-error: false }
          - { ocaml-version: 4_12, continue-on-error: true }
        os: ["ubuntu-latest", "macos-latest"]
    runs-on: ${{ matrix.os }}
    env:
      NIXPKGS_ALLOW_UNFREE: 1
    steps:
      - uses: actions/checkout@v2
      - uses: cachix/install-nix-action@v12
        with:
          nix_path: nixpkgs=channel:nixpkgs-unstable
      - uses: cachix/cachix-action@v8
        with:
          name: anmonteiro
          signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
      - name: fmt
        run: |
          find . -iname '*.nix' | xargs nix run -f ./sources.nix nixpkgs-fmt -c nixpkgs-fmt --check
      - name: Build nix packages
        run: |
          nix run -f ./sources.nix nix-build-uncached -c \
            nix-build-uncached ./ci.nix --argstr ocamlVersion ${{ matrix.setup.ocaml-version }} --show-trace --keep-going
        continue-on-error: ${{ matrix.setup.continue-on-error }}
      - name: Cross-compile nix packages to musl64
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          nix run -f ./sources.nix nix-build-uncached -c \
            nix-build-uncached ./ci.nix --argstr ocamlVersion ${{ matrix.setup.ocaml-version }} --arg musl true --show-trace --keep-going
        continue-on-error: ${{ matrix.setup.continue-on-error }}
